-(some day in april 2025) start to reading the book called 'Learning Git' from OReilly publishing in the firs release (2023). The development pass through chapter 1 what is git, chapter 2 local repositories and chapter 3 making a commit.
-(2025-05-17) continue the reading from chapter 3 'making a commmit' and with some more research we learn how remove from the staging area of git files that we pushit to it. Is necessary to understand that a commit is a save of a version of our project and a version of our project to. When we call the command 'git add' we push a copy in the staging area of git, this means that the file gonna be tracked but for save the changes we need to commit with the command 'git commit -m <some_message>'. Other things that we remember is that the command git config --global user.name let us to see some configuration of our git
-(2025-05-17) like i said in the last input with research we learn about the command 'git restore --staged <file>' for remove from staging area of git some file. On the other hand the command 'git log' let us to see the commits we made it
-(2025-05-17) continuing with the reading in chapter 4 we remember the 4 parts of a project tracked by git, the working directory, the local repository (.git folder) the staging area (index file) and the commit history. This capter also introduce about branches and his main benefits; i) work on the same project in different ways ii) help multiple people work on the same project at the same time. The branch is like a line of development, each of these branches is a standalone version of the project. The idea is to use the 'main' branch for the final or well worked project and the other like trial and error porjects, finally when these other branches have the project developed in a stable manner we can merge with the principal branch.
-(2025-05-17) chapter 4 explain how commits links between others and how branches point to commits these means in what branch were done the commit. We can see the relations between commits with the command 'git cat-file -p <commit_hash>' but like we see we need the commit hash, maybe for obtain that data the process si to hard, one of the reasons for what this command is not used.
-(2025-05-17) another lesson in this chapter is how to create another branch in git, for this we use the command 'git branch <new_name_branch>'. When run this command it create a new branch in the pointing to the las commit or the commit where we are. Another interesting lesson is that the name HEAD is simply the pointer to the branch we are and in the .git directory we have a 'heads' directory that is not HEAD is only where are the data of the branches
(2025-05-17) in this capter we learn to change form one branch to another, we see that when we do that happens three things that gonna be developed in more detail in the future. The important part is that the HEAD pointer change to the branch specified in the command 'git switch <name_branch>' if we look in the files of heads directory it changes the reference (refs). When we change from branch we can see that the commit we made are effective in this branch and the branch now point to differents commits depending in what branch we are working on
-(2025-05-17) continue the reading from page 110
